name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  linux-build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: conan
        run: sudo pip install configparser && sudo pip install conan

      - name: conan remotes
        run: conan remote add conan_center https://api.bintray.com/conan/conan/conan-center && conan remote add epitech_conan https://api.bintray.com/conan/epitech/public-conan && conan remote add public_conan https://api.bintray.com/conan/bincrafters/public-conan

      - name: Missing packages
        run: sudo apt install xorg-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-xinerama0-dev

      - name: Setup Repository
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: conan install ../B-CPP-500-STG-5-1-babel-victor.limbach --build=missing && cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE

  windows-build:

    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1.0.1

      - name: conan
        run: pip install configparser && pip install conan

      - name: conan remotes
        run: conan remote add conan_center https://api.bintray.com/conan/conan/conan-center && conan remote add epitech_conan https://api.bintray.com/conan/epitech/public-conan && conan remote add public_conan https://api.bintray.com/conan/bincrafters/public-conan

      - name: Setup Repository
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure Conan && CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: conan install ../B-CPP-500-STG-5-1-babel-jean-gael.choppe --build=missing && cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        working-directory: ${{runner.workspace}}/build
        run: msbuild Babel.sln

      - name: Check if binary exist
        working-directory: ${{runner.workspace}}/build
        run: ls